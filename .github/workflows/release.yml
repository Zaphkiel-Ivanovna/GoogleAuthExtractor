name: üöÄ Release Builder

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
      prerelease:
        description: 'Is this a prerelease?'
        type: boolean
        default: false

# Set permissions needed for GitHub Packages
permissions:
  contents: write # For creating releases
  packages: write # For publishing packages to GHCR

jobs:
  build:
    name: üî® Build & Release
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üîß Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true

      - name: üß™ Run tests
        run: make test

      - name: üèóÔ∏è Build for all platforms
        run: |
          # Create directories for builds
          mkdir -p build/release

          # Build for Linux (amd64)
          GOOS=linux GOARCH=amd64 go build -o build/release/gauth-extractor-linux-amd64 ./cmd/extractor

          # Build for macOS (amd64)
          GOOS=darwin GOARCH=amd64 go build -o build/release/gauth-extractor-darwin-amd64 ./cmd/extractor

          # Build for macOS (arm64)
          GOOS=darwin GOARCH=arm64 go build -o build/release/gauth-extractor-darwin-arm64 ./cmd/extractor

          # Build for Windows (amd64)
          GOOS=windows GOARCH=amd64 go build -o build/release/gauth-extractor-windows-amd64.exe ./cmd/extractor

      - name: üê≥ Build Docker image
        run: make docker

      - name: üîê Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üìã Get version without 'v' prefix
        id: version
        run: echo "VERSION=$(echo ${{ github.event.inputs.version }} | sed 's/^v//')" >> $GITHUB_OUTPUT

      - name: üì¶ Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: üì¶ Tag and push Docker image to GitHub Container Registry
        run: |
          # Create lowercase repository name (required for ghcr.io)
          REPO_NAME_LOWERCASE="$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')"
          
          # Add Docker metadata for better discoverability on GHCR
          docker build -t ghcr.io/${REPO_NAME_LOWERCASE}:${{ steps.version.outputs.VERSION }} \
            --label "org.opencontainers.image.title=Google Auth Extractor" \
            --label "org.opencontainers.image.description=A tool to extract TOTP/HOTP secrets from Google Authenticator" \
            --label "org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
            --label "org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}" \
            .
          
          # Tag also as latest
          docker tag ghcr.io/${REPO_NAME_LOWERCASE}:${{ steps.version.outputs.VERSION }} ghcr.io/${REPO_NAME_LOWERCASE}:latest
          
          # Push to GitHub Container Registry
          docker push ghcr.io/${REPO_NAME_LOWERCASE}:${{ steps.version.outputs.VERSION }}
          docker push ghcr.io/${REPO_NAME_LOWERCASE}:latest

      - name: üö¢ Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.inputs.version }}
          name: üîê Google Auth Extractor ${{ github.event.inputs.version }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            build/release/gauth-extractor-linux-amd64
            build/release/gauth-extractor-darwin-amd64
            build/release/gauth-extractor-darwin-arm64
            build/release/gauth-extractor-windows-amd64.exe
        env:
          GITHUB_REPOSITORY: zaphkiel-ivanovna/googleauthextractor
